version: '3.0'

services:
  goapp:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - ELK_URL=http://elasticsearch:9200
    networks:
    - eventsservice

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
    - bootstrap.memory_lock=true
    - ES_JAVA_OPTS=-Xms1g -Xmx1g
    - discovery.type=single-node
    - node.name=lonely-gopher
    - cluster.name=eventsservice
    ulimits:
      memlock:
        hard: -1
        soft: -1
    ports:
    - 9200:9200
    networks:
    - eventsservice
    healthcheck:
      interval: 10s
      retries: 20
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
    - 5601:5601
    networks:
    - eventsservice
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
  
  rabbitmq:
    image: 'rabbitmq:3.8.16-management'
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
    - eventsservice

networks:
  eventsservice:
    driver: bridge